{@import https://raw.githubusercontent.com/central7/pom/1/pom.jim}
{@import version.jim}
{@import modules.jim}
{@define taglets($x)=<taglets>$x</taglets>}
{@define taglet($x)=<taglet>$x</taglet>}
{@define tagletArtifacts($x)=<tagletArtifacts>$x</tagletArtifacts>}
{@define tagletArtifact($x)=<tagletArtifact>$x</tagletArtifact>}
{@define tagletClass($x)=<tagletClass>$x</tagletClass>}
{@define additionalOptions($x)=<additionalOptions>$x</additionalOptions>}
{@define additionalOption($x)=<additionalOption>$x</additionalOption>}
{@define docletArtifact($x)=<docletArtifact>$x</docletArtifact>}
{@define doclet($x)=<doclet>$x</doclet>}
{@define doclint($x)=<doclint>$x</doclint>}
{@define asciidoc:output=pom.xml}

{project jamal-parent}
    {packaging pom}
    {GAV :{GROUPID}:jamal-parent:{VERSION}}
    {description Jamal macro library to process text files}
    {modules {@for [evalist] $M in ({modules:ALL},{modules:TEST},{modules:TESTSUPPORT},extensions)=jamal-$M,}jamal-all}
    {license|The Apache License, Version 2.0|http://www.apache.org/licenses/LICENSE-2.0.txt}
    {developer|Peter Verhas|peter@verhas.com}
    {github|verhas|jamal}
    {properties|
        {property :project.build.sourceEncoding:UTF-8}
    }
    {distributionManagement|
        {snapshotRepository |ossrh|https://oss.sonatype.org/content/repositories/snapshots}
        {repository |ossrh|https://oss.sonatype.org/service/local/staging/deploy/maven2/}
    }
    {build|
        {plugins|
            {plugin|{GAV :org.sonatype.plugins:nexus-staging-maven-plugin: }}
        }
        {pluginManagement|
            {plugins|
                {plugin|
                    {GAV :org.apache.maven.plugins:maven-source-plugin:{MAVEN_SOURCE_PLUGIN_VERSION}}
                    {executions|
                        {execution|
                            {id|attach-sources}
                            {goals|{goal|jar}}
                        }
                    }
                }
                {plugin|
                    {GAV :org.apache.maven.plugins:maven-javadoc-plugin:{MAVEN_JAVADOC_PLUGIN_VERSION}}
                    {configuration|
                        {detectOfflineLinks false}
                        {doclint none}
                        {doclet javax0.jamal.doclet.JamalDoclet}
                        {docletArtifact {GAV :com.javax0.jamal:jamal-doclet:{LAST_RELEASE}}}
                        {additionalOptions
                            {additionalOption |--source-root}
                            {additionalOption {@escape* ``${project.build.sourceDirectory}``}}
                        }
                        {taglets|
                            {taglet|
                                {tagletClass javax0.jamal.doclet.JamalTaglet}
                                {tagletArtifact {GAV :com.javax0.jamal:jamal-doclet:{LAST_RELEASE}}}
                            }
                        }
                    }
                    {executions|{execution|
                            {id|attach-javadocs}
                            {goals|{goal|jar}}}}
                }
                {plugin|
                    {GAV :org.apache.maven.plugins:maven-compiler-plugin:{MAVEN_COMPILER_PLUGIN_VERSION}}
                    <configuration>
                        <source>{JAVA_SOURCE}</source>
                        <target>{JAVA_TARGET}</target>
                        <release>{JAVA_RELEASE}</release>
                    </configuration>
                }
                {plugin|
                    {GAV :org.apache.maven.plugins:maven-dependency-plugin:{MAVEN_DEPENDENCY_PLUGIN_VERSION}}
                    {executions|{execution|
                            {id|collect}
                            {goals|{goal|collect}}}}
                }

                {plugin|
                    {GAV :org.apache.maven.plugins:maven-surefire-plugin:{SUREFIRE_PLUGIN_VERSION}}
                }
                {plugin|
                      {GAV :org.sonatype.plugins:nexus-staging-maven-plugin:{SONATYPE_PLUGIN_VERSION}}
                      {extensions :true}
                      {configuration|
                        <serverId>ossrh</serverId>
                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                        <autoReleaseAfterClose>true</autoReleaseAfterClose>
                      }
                }
<plugin>
<groupId>org.sahli.asciidoc.confluence.publisher</groupId>
<artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
<version>0.17.1</version>
<configuration>
<asciidocRootFolder>.</asciidocRootFolder>
<sourceEncoding>UTF-8</sourceEncoding> <!-- default -->
<rootConfluenceUrl>https://javax0.atlassian.net/wiki/</rootConfluenceUrl>
<skipSslVerification>false</skipSslVerification>
<maxRequestsPerSecond>10</maxRequestsPerSecond>
<spaceKey>asciidoc</spaceKey>
<ancestorId>262145</ancestorId>
<serverId>confluence</serverId>
<pageTitlePrefix xml:space="preserve">Doc :: </pageTitlePrefix>
<pageTitleSuffix xml:space="preserve"> [{VERSION}]</pageTitleSuffix>
<versionMessage>Version {VERSION}</versionMessage>
<notifyWatchers>false</notifyWatchers>
<attributes>
<version>{VERSION}</version>
<someOtherKey>value</someOtherKey>
</attributes>
</configuration>
<executions>
<execution>
<id>publish-documentation</id>
<goals>
<goal>publish</goal>
</goals>
<phase>site</phase>
</execution>
</executions>
</plugin>
            }
        }
    }
    {dependencyManagement|{dependencies|
        {@for [evalist] MODULE in ({modules:ALL},{modules:TEST},{modules:TESTSUPPORT},extensions,all)={dependency :{GROUPID}:jamal-MODULE:{VERSION}}}
        {@for MODULE in (api,engine,params)={dependency :org.junit.jupiter:junit-jupiter-MODULE:{JUPITER_VERSION}:test}}
        {dependency|com.javax0|levenshtein|{LEVENSHTEIN_VERSION}}
        {dependency|com.javax0.mavenDownload|mavenDownloader|{MAVEN_DOWNLOADER}}
        {dependency|org.mockito|mockito-core|{MOCKITO_VERSION}|test}
        }}

    {profiles|
        {profile release}
            {build|
                {plugins|
                    {plugin|
                        {GAV :org.apache.maven.plugins:maven-gpg-plugin:{MAVEN_GPG_PLUGIN_VERSION}}
                        {executions|{execution
                            {id :sign-artifacts}
                            {phase :verify}
                            {goals|{goal :sign}}
                        }}
                    }
                }
           }
        {end profile}
    }
{end project}
{@try{@xmlFormat}}
