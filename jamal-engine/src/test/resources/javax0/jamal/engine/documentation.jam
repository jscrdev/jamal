{@define output=_output}

START SNIPPET started{output}
{@define fruit(color,actualSize,name)=we have an color name of size actualSize}
{fruit/red/apple/20ounce}
{fruit/green/melone/1kg}
END SNIPPET

START SNIPPET comment{output}
this is some {@comment this text
will not appear in the output}text
END SNIPPET

START SNIPPET define{output}
{@define parameterless=this is a simple macro} macro defined
{parameterless}
{@define withparams(a,b,%66h)=this is a b %66h} macro defined
{withparams/A/more complex/macro}
{withparams/%66h/%66h/zazu} <- %66h is not replaced to zazu in the parameters
{@define? withparams(a,b,c)=abc}here 'withparams' is not redefined
{withparams|a|b|c}
{#comment {@define x=local}{@define :x=global} {#define :y=here we are {x}}}
{y}
here we are {x}
END SNIPPET

START SNIPPET eval{output}
{@eval/JShell System.out.print(1+3)}
{@define a=1}{@define b=2}
{#eval/JShell System.out.print({a}+{b})}
END SNIPPET

START SNIPPET script{output}
{@script for(loopvar,start,end,text)=
    var c = "";
    for( var i = start ; i <= end ; i++ ){
      c = c + text.replaceAll(loopvar, ""+i);
    }
    System.out.print(c);
}
{for%xxx%1%3%xxx. iterated
}
END SNIPPET

START SNIPPET verbatim1{output}
{@define a=this is it}{@define b={a}}{#define c={b}}{c}
END SNIPPET

START SNIPPET verbatim2{output}
{@define a=this is it}{@define b={a}}{#define c={@verbatim b}}{c} {@verbatim c}
END SNIPPET

START SNIPPET sep{output}
{@sep/[[/]]}
[[@define apple=fruit]]
[[apple]]
[[#comment [[@sep/<</>>]]
<<@define z=zazi>>
<<#sep>>
[[#define a1=[[z]]]]
[[@define a2=[[z]]]]
[[@define a3={z}]]
[[@export a1,a2,a3]]
]]
[[@sep]]
{@define z=SSS}
{z}{a1}{a2}{a3}{@verbatim a3}
END SNIPPET

START SNIPPET ident{output}
{@define b=92}{#define c={@ident {a}}{b}}{@define a=14}{c}
END SNIPPET

START SNIPPET export{output}
A comment starts a new scope {#comment {@define Z=13}} Z {?Z} is not defined here unless...
{#comment {@define Z=14}{@export Z}}Z is exported. In that case Z is {Z}.
END SNIPPET