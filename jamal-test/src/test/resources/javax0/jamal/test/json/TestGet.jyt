a simple get from a json structure:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get a/b/d/2/q/h}
  Output: "deep h"
a simple get from a json structure with alternatives:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get a/b/d/9000/q/h|a/b/d/2/q/h}
  Output: "deep h"
a simple get from a json structure with alternatives including undefined macro name:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get k/b/d/9000/q/h| a/b/d/2/q/h}
  Output: "deep h"
alternative returns the whole json when no path:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get k/b/d/9000/q/h|a}
  Output: |-
    {"a":"alma","b":{"c":3,"d":[1,2,{"q":{"h":"deep h"}}]}}
an erroneous get from a json structure:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get a/k/d/2/q/h}
  Throws: "The path 'a/k/d/2/q/h' is not valid or cannot be evaluated for the given JSON."
error when there is only a single alternative and it is not valid:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get z/k/d/2/q/h}
  Throws: "There is no macro named 'z' in the registry containing a JSON object"
error when there are multiple alternatives and none is valid:
  Input: |-
    {@json:define a={a:alma,b:{c: 3, d:[1,2,{q:{h:"deep h"}}]}}}{@json:get z/k/d/2/q/h | z/k/d/2/q/h}
  Throws: "The path 'z/k/d/2/q/h \\| z/k/d/2/q/h' is not valid or cannot be evaluated for the given JSON."
