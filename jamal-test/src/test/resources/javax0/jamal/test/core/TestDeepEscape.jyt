"Testing deep escape":
# unescape happens in the closer and the closer is registered by `escape*`
    Input: |-
      {@define a(x)=x}\
      {a{a{a{a{a{a{a {@escape* ``${qqq}``}}}}}}}}
    Output: "${qqq}"

"Testing deep escape in deferred XML":
# when there are multiple closers it does not matter that the unescape closer recursively invokes the same Jamal processor
    Input: |-
      {@define a(x)=x}{@escape* `.``.`}{@xmlFormat}\
      {a{a{a{a{a{a{a {@escape* ``<xml>${qqq}</xml>``}}}}}}}}
    Output: |-
      <?xml version="1.0" encoding="UTF-8" standalone="no"?>
      <xml>${qqq}</xml>

"Testing deep escape in deferred XML in wrong order":
# when there are multiple closers it does not matter that the unescape closer recursively invokes the same Jamal processor
    Input: |-
      {@define a(x)=x}{@xmlFormat}\
      {a{a{a{a{a{a{a {@escape* ``<xml>${qqq}</xml>``}}}}}}}}
    Throws: "Content is not allowed in prolog\\."