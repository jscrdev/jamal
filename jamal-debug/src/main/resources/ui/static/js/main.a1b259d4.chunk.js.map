{"version":3,"sources":["components/Input.tsx","components/CommandButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","text","macro","start","indexOf","end","length","startText","substr","middleText","endText","className","CommandButton","title","onClickHandler","onClick","App","useState","inputBefore","setInputBefore","setMacro","output","useEffect","axios","get","then","response","data","post","console","log","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAqBeA,EAbc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAsB,IAAjBC,aAAiB,MAAT,GAAS,EAC9CC,EAAQF,EAAKG,QAAQF,GACrBG,EAAMF,EAAQD,EAAMI,OACpBC,GAAuB,IAAXJ,EAAeF,EAAOA,EAAKO,OAAO,EAAEL,GAChDM,GAAwB,IAAXN,EAAe,GAAKD,EACjCQ,GAAqB,IAAXP,EAAe,GAAKF,EAAKO,OAAOH,GAChD,OACA,sBAAKM,UAAU,mBAAf,UACE,+BAAOJ,IAAiB,sBAAMI,UAAU,MAAhB,SAAuBF,IAAkB,+BAAOC,QCA7DE,G,MAR8B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eACrD,OACA,mCACE,wBAAQC,QAASD,EAAjB,SAAkCD,Q,wBCiCvBG,MArCf,WAAgB,IAAD,EAC0BC,mBAAiB,IAD3C,mBACJC,EADI,KACQC,EADR,OAEcF,mBAAiB,IAF/B,mBAEJf,EAFI,KAEEkB,EAFF,OAGgBH,mBAAS,IAHzB,mBAGJI,EAHI,KAab,OAba,KAYPC,qBAJuB,WACnBC,IAAMC,IAAI,qCAAqCC,MAAM,SAAAC,GAAQ,OAAIP,EAAeO,EAASC,SACzFJ,IAAMC,IAAI,oCAAoCC,MAAM,SAAAC,GAAQ,OAAIN,EAASM,EAASC,YAI1F,qBAAKhB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAeE,MAAM,MAAMC,eAZd,WACTS,IAAMK,KAAK,6BACVH,MAAM,kBAAMI,QAAQC,IAAI,YAW3B,cAAC,EAAD,CACE7B,KAAMiB,EAAahB,MAAOA,IAE5B,sBACA,cAAC,EAAD,CACYD,KAAMoB,IAEpB,mBACEV,UAAU,WACVoB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCjBOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a1b259d4.chunk.js","sourcesContent":["import React, {FC} from 'react';\nimport './Input.css';\n\ntype InputProps={\n    text: string;\n    macro?: string;\n}\n\nconst Input:FC<InputProps> = ( {text,macro = \"\"} ) => {\n  const start = text.indexOf(macro);\n  const end = start + macro.length;\n  const startText = start === -1 ? text : text.substr(0,start) ;\n  const middleText = start === -1 ? \"\" : macro ;\n  const endText = start === -1 ? \"\" : text.substr(end);\n  return (\n  <pre className=\"Input_SourceCode\">\n    <span>{startText}</span><span className=\"red\">{middleText}</span><span>{endText}</span>\n  </pre>\n  );\n}\n\nexport default Input;\n","import React, {FC} from 'react';\nimport './CommandButton.css';\n\ntype CommandButtonProps = {\n    title: string;\n    onClickHandler : () => void;\n}\n\nconst CommandButton:FC<CommandButtonProps> = ( {title, onClickHandler} ) => {\n  return (\n  <>\n    <button onClick={onClickHandler}>{title}</button>\n  </>\n  );\n}\n\nexport default CommandButton;\n","import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport Input from './components/Input';\nimport CommandButton from './components/CommandButton';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n    const [inputBefore,setInputBefore] = useState<string>(\"\");\n    const [macro,setMacro] = useState<string>(\"\");\n    const [output,setOutput] = useState(\"\");\n    const dummyRun = () => {\n            axios.post(\"http://localhost:8080/run\")\n            .then( () => console.log(\"OK\") );\n            }\n    const initDebuggerDisplay= () => {\n            axios.get(\"http://localhost:8080/inputBefore\").then( response => setInputBefore(response.data) );\n            axios.get(\"http://localhost:8080/processing\").then( response => setMacro(response.data));\n    }\n        useEffect(initDebuggerDisplay);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <CommandButton title=\"Run\" onClickHandler={dummyRun}/>\n          <Input\n            text={inputBefore} macro={macro}\n          />\n          <p></p>\n          <Input\n                      text={output}\n                    />\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}